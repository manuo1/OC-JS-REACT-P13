openapi: 3.0.3
info:
  title: Bank Argent - Transactions API Proposal
  description: |
    API proposal for user-side transaction management.
    This file is a design draft and not part of the live implementation.
  version: "0.1.0"
  termsOfService: http://swagger.io/terms/
servers:
  - url: http://localhost:3001/api/v1
    description: Local development server

# All routes require JWT authentication
security:
  - bearerAuth: []

paths:
  /accounts/{accountId}/transactions:
    get:
      summary: Get all transactions for a given account in the current month
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
          description: Bank account ID
      responses:
        '200':
          description: List of transactions for the account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized (missing or invalid token)
        '404':
          description: Account not found

  /transactions/{transactionId}:
    get:
      summary: Get detailed information about a specific transaction
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
          description: Unique transaction ID
      responses:
        '200':
          description: Detailed transaction data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDetail'
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found

    patch:
      summary: Update user-related metadata for a transaction (category or notes)
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
          description: Unique transaction ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  example: Food
                notes:
                  type: string
                  example: Personal lunch at Golden Sun Bakery
      responses:
        '200':
          description: Transaction updated successfully
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date
        description:
          type: string
        amount:
          type: number
          format: float
        balance:
          type: number
          format: float

    TransactionDetail:
      allOf:
        - $ref: '#/components/schemas/Transaction'
        - type: object
          properties:
            type:
              type: string
              example: Electronic
            category:
              type: string
              example: Food
            notes:
              type: string
              example: ""
